events {
    worker_connections 1024;
}

http {
    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Upstream configuration for MCP server instances
    upstream mcp_servers {
        least_conn;
        server dockerhub-mcp-server:3000 max_fails=3 fail_timeout=30s;
        # Add more instances for load balancing
        # server dockerhub-mcp-server-2:3000 max_fails=3 fail_timeout=30s;
        # server dockerhub-mcp-server-3:3000 max_fails=3 fail_timeout=30s;
    }

    # Health check endpoint
    server {
        listen 80;
        server_name health.*;

        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }

    # Main MCP server proxy
    server {
        listen 80 default_server;
        server_name _;

        # Security headers
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";

        # Rate limiting
        limit_req_zone $binary_remote_addr zone=api:10m rate=100r/m;

        # Proxy settings
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # Health check for upstream
        location /health {
            proxy_pass http://mcp_servers/health;
            access_log off;
        }

        # MCP server proxy
        location / {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://mcp_servers;
            proxy_buffering off;
            proxy_request_buffering off;
            
            # Handle WebSocket connections if needed
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        # Static files (if any)
        location /static/ {
            alias /var/www/static/;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;

        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}
